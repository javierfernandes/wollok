import asustadores.*

import modelo.Puerta
import modelo.Equipo
import modelo.monstersInc

import asustables.Ninio
import asustables.Piyamada
import asustables.Adolescente

import asistentes.*
import actividades.*

/**
 *
 */
program monstersInc {

	// 1)
	val sullivan = new AsustadorNato(25, 200)
	val puertaConNinio4 = new Puerta(new Ninio(4))
	
	assert.equals(1250, sullivan.entrarAPuerta(puertaConNinio4))


	// 2)
	val mike = new AsustadorPerseverante(20)
	mike.mejora(new EstudiarMateria("Sustos 2", 50))
	mike.mejora(new EjercitarEnSimulador(2))
	
	assert.that(70 == mike.puntosDeTerror())
	
	val piyamada = new Piyamada()
	piyamada.agregarNinio(new Ninio(2))
	piyamada.agregarNinio(new Ninio(3))
	piyamada.agregarNinio(new Ninio(4))
	
	val puertaConPiyamada = new Puerta(piyamada)
	
	val energiaMike = mike.entrarAPuerta(puertaConPiyamada)
	
	self.println(mike)
	assert.that(75 == energiaMike)   // 70/2 + 70/3 + 70/4 = 75


	// 3)
	val equipo = new Equipo(sullivan, new AsistenteNormal())
	equipo.visitar(new Puerta(new Adolescente()))
	
	assert.equals(90.0, sullivan.getNivelMotivacion())
	assert.that(0 == equipo.getEnergiaGenerada())


	// 4)

	val emp = monstersInc
	emp.agregarEquipo(equipo)
	emp.agregarPuerta(puertaConNinio4)
	emp.diaLaboral()
	assert.equals(1125.0, equipo.getEnergiaGenerada())

	// 5)
	assert.that(equipo == emp.equipoMasAsustador())
	
	val equipoCapo = object {
		method getEnergiaGenerada() { return 90000.0 }
	}
	emp.agregarEquipo(equipoCapo)
	
	assert.that(equipoCapo == emp.equipoMasAsustador())

}