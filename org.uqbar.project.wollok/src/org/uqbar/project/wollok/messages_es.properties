# LINKER
LINKING_COULD_NOT_RESOLVE_REFERENCE = No se puede resolver la referencia 

#
# Check Severity
#
CheckSeverity_ERROR = ERROR
CheckSeverity_INFO = INFO
CheckSeverity_WARN = ADVERTENCIA

# Ifs
WollokDslValidator_BAD_USAGE_OF_IF_AS_BOOLEAN_EXPRESSION = Mal uso del if ! En lugar de usar if debe retornar directamente:  
WollokDslValidator_EXPECTING_BOOLEAN = Se espera un booleano
WollokDslValidator_UNNECESSARY_IF = If innecesario. Siempre se eval\u00FAa como verdadero
WollokDslValidator_UNNECESSARY_CONDITION = Condici\u00F3n innecesaria
WollokDslValidator_ALWAYS_EVALUATES_TO_FALSE = Siempre se eval\u00FAa como falso !
WollokDslValidator_ALWAYS_EVALUATES_TO_TRUE = Siempre se eval\u00FAa como verdadero !

WollokDslValidator_DONT_USE_LOCAL_VAR_ONLY_TO_RETURN = Esta variable solo se usa para retornarla. Considere eliminarla

WollokDslValidator_BINARYOP_ONLY_ON_VARS = s\u00F3lo se puede utilizar con referencias variables
WollokDslValidator_CANNOT_ASSIGN_TO_ITSELF = No se puede asignar la variable a si misma. No Tiene ning\u00FAn efecto.
WollokDslValidator_CANNOT_INSTANTIATE_ABSTRACT_CLASS = Imposible instanciar una clase abstracta
WollokDslValidator_CANNOT_MODIFY_VAL = No se puede modificar las constantes

WollokDslValidator_DONT_COMPARE_AGAINST_TRUE_OR_FALSE = No compare contra booleanos, use el operador not o directamente el valor comparado.

WollokDslValidator_CATCH_ONLY_EXCEPTION = Solo se puede aplicar 'catch' a un objeto de tipo wollok.lang.Exception o una subclase
WollokDslValidator_UNREACHABLE_CATCH = Este catch nunca se va a ejecutar debido a otro catch anterior

WollokDslValidator_CLASSES_IN_FILE = Clases y objetos se deben definir en archivos con extensi\u00F3n
WollokDslValidator_CLASS_NAME_MUST_START_UPPERCASE = El nombre de clase debe comenzar en may\u00FAscula

WollokDslValidator_DUPLICATED_CLASS_IN_PACKAGE = Nombre de clase duplicado en package
WollokDslValidator_DUPLICATED_METHOD = M\u00E9todo duplicado
WollokDslValidator_DUPLICATED_NAME = Nombre duplicado
WollokDslValidator_DUPLICATED_PACKAGE = Package duplicado

WollokDslValidator_ERROR_TRY_WITHOUT_CATCH_OR_ALWAYS = El bloque 'try' debe tener al menos un 'catch' o 'then always'
WollokDslValidator_ERROR_VARIABLE_NEVER_ASSIGNED = Variable is never assigned
WollokDslValidator_METHOD_MUST_HAVE_OVERRIDE_KEYWORD = Debe marcarse con 'override', ya que sobrescribe un m\u00E9todo de sus superclases
WollokDslValidator_METHOD_NOT_OVERRIDING = Este m\u00E9todo no sobrescribe ning\u00FAn m\u00E9todo
WollokDslValidator_OVERRIDING_METHOD_MUST_RETURN_VALUE = Debe retornar un valor ya que el m\u00E9todo sobrescrito retorna un valor
WollokDslValidator_OVERRIDING_METHOD_MUST_HAVE_A_BODY = Si sobrescribe debe especificar el cuerpo del m\u00E9todo

WollokDslValidator_GETTER_METHOD_SHOULD_RETURN_VALUE = Getter debe retornar un valor

WollokDslValidator_CANNOT_RETURN_ASSIGNMENT = No se puede retornar una asignaci\u00F3n

WollokDslValidator_VAR_ARG_PARAM_MUST_BE_THE_LAST_ONE = S\u00F3lo el \u00FAltimo parametro puede ser un vararg. 
WollokDslValidator_METHOD_DOES_NOT_RETURN_A_VALUE_ON_EVERY_POSSIBLE_FLOW = Debe retornar un valor en todas las posibles ramas de ejecuci\u00F3n
WollokDslValidator_OVERRIDING_METHOD_MUST_NOT_RETURN_VALUE = No debe retornar un valor ya que el m\u00E9todo sobrescrito no lo hace retorna

WollokDslValidator_METHOD_ON_THIS_DOESNT_EXIST = El m\u00E9todo no existe o n\u00FAmero incorrecto de argumentos
WollokDslValidator_METHOD_ON_WKO_DOESNT_EXIST = El mensaje no existe o n\u00FAmero incorrecto de argumentos para objeto
WollokDslValidator_VOID_MESSAGES_CANNOT_BE_USED_AS_VALUES = Este mensaje no retorna ning\u00FAn valor

WollokDslValidator_NATIVE_IN_NATIVE_SUBCLASS = No se pueden tener m\u00E9todso native en subclases de clases que ya son native
WollokDslValidator_NATIVE_METHOD_NO_BODY = M\u00E9todos nativos no deben tener implementaci\u00F3n
WollokDslValidator_NATIVE_METHOD_NO_OVERRIDE = M\u00E9todos nativos no se deben sobrescribir
WollokDslValidator_NATIVE_METHOD_ONLY_IN_CLASSES = M\u00E9todos nativos s\u00F3lo se pueden definir en clases

WollokDslValidator_NO_EXPRESSION_AFTER_RETURN = Expresi\u00F3n inv\u00E1lida luego de un return
WollokDslValidator_NO_EXPRESSION_AFTER_THROW = Expresi\u00F3n inv\u00E1lida luego de un throw
WollokDslValidator_UNREACHABLE_CODE = C\u00F3digo que nunca se va a ejecutar

WollokDslValidator_NO_RETURN_EXPRESSION_IN_CONSTRUCTOR = No puedes devolver un valor en un constructor. 
WollokDslValidator_SUPER_EXPRESSION_IN_CONSTRUCTOR = No se puede usar invocar con super en el cuerpo del constructor. Hay que usar la sintaxis de delegaciÃ³n.
WollokDslValidator_POSTFIX_ONLY_FOR_VAR = S\u00F3lo se puede utilizar con referencias variables
WollokDslValidator_PROGRAM_IN_FILE = Los programas deben estar en archivos con extensi\u00F3n
WollokDslValidator_REFERENCIABLE_NAME_MUST_START_LOWERCASE = El nombre de la referencia debe comenzar en min\u00FAscula
WollokDslValidator_VARIABLE_NAME_MUST_START_LOWERCASE = El nombre de la variable debe comenzar en min\u00FAscula
WollokDslValidator_PARAMETER_NAME_MUST_START_LOWERCASE = El nombre del par\u00E1metro debe comenzar en min\u00FAscula
WollokDslValidator_OBJECT_NAME_MUST_START_LOWERCASE = El nombre del objeto debe comenzar en min\u00FAscula

WollokDslValidator_SUPER_INCORRECT_ARGS = N\u00FAmero incorrecto de argumentos a 'super'. Se espera 
WollokDslValidator_SUPER_ONLY_IN_CLASSES = S\u00F3lo se puede utilizar 'super' en m\u00E9todos declarados en clases
WollokDslValidator_SUPER_ONLY_OVERRIDING_METHOD = S\u00F3lo se puede utilizar 'super' en un m\u00E9tod que sobrescribe otro

WollokDslValidator_VARIABLE_NEVER_USED = Esta variable nunca se utiliza
WollokDslValidator_WARN_VARIABLE_NEVER_ASSIGNED = Esta variable nunca se asigna

WollokDslValidator_WCONSTRUCTOR_CALL__ARGUMENTS = N\u00FAmero de argumentos incorrecto. Debe ser 

WollokDslValidator_DUPLICATED_VARIABLE_IN_HIERARCHY = Ya existe una variable de instancia con este nombre en la jerarquÃ­a

WollokDslValidator_RETURN_FORGOTTEN = El cuerpo del M\u00E9todo genera un valor que no se estar retornando. Olvidaste el 'return' ?

WollokDslValidator_MUST_IMPLEMENT_ABSTRACT_METHODS = Debe implementar los m\u00E9todos abstractos heredados

WollokDslValidator_WRONG_IMPORT = No se puede resolver este import

WollokDslValidator_CANNOT_USE_SELF_IN_A_PROGRAM = No se puede usar 'self' en un programa

WollokDslValidator_DONT_USE_WKONAME_WITHIN_IT = No debe usar el nombre del objeto dentro de el. Use 'self'.

WollokDslValidator_DONT_DUPLICATE_TEST_DESCRIPTION = Los nombres de los tests deben ser únicos. Por que tendrían la misma descripción

WollokDslValidator_INCONSISTENT_HIERARCHY_MIXIN_CALLING_SUPER_NOT_FULLFILLED = Jerarquia inconsistente. Existen m\u00E9todos en mixins que requieren implementaci\u00F3n en super:

#
# CHECK GROUPS
#

CheckGroup_DEFAULT_GROUP = Otras validaciones
CheckGroup_CODE_STYLE = Estilo de Programaci\u00F3n
CheckGroup_POTENTIAL_PROGRAMMING_PROBLEM = Potenciales Problemas de Programaci\u00F3n

# *******************************
# ** interpreter runtime
# *******************************

OBJECT_DESCRIPTION_ARTICLE = un/a  
OBJECT_DESCRIPTION_AN_OBJECT = un Objeto
