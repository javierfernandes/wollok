/* XPECT_SETUP org.uqbar.project.wollok.tests.xpect.WollokXPectTest END_SETUP */

class Direccion {
	var calle
	var numero
	
	constructor(c, n) {
		calle = c
		numero = n
	}
}

class Point {
	var x
	var y
	
	constructor() { x = 0; y = 0 }
	constructor(ax, ay) {
		x = ax ; y = ay
	}
}

class Circle {
	var r
	var p
	constructor(ap, ar) { r = ar ; p = ap }
	constructor (x, y, ar) { p = new Point(x, y) ; r = ar }
}

class WithDuplicatedConstructors {
	// XPECT errors --> "Duplicated constructor with same number of parameters" at "a"
	constructor(a, b) {
	}
	// XPECT errors --> "Duplicated constructor with same number of parameters" at "b"
	constructor (b, c) {
	}
}

class ConstructorCallTest {

	method run() {
		// XPECT warnings --> "Unused variable" at "direccion"
		const direccion = new Direccion("Jose Marti", 155)
		
		/* XPECT issues --- 
		   "Wrong number of arguments. Should be new Direccion(c, n)" at "new Direccion()"
		   "Unused variable" at "d1"
		   ---
		*/
		const d1 = new Direccion()
		
		/* XPECT issues --- 
		   "Wrong number of arguments. Should be new Direccion(c, n)" at "new Direccion(\"Juan\")"
		   "Unused variable" at "d2"
		   ---
		*/
		const d2 = new Direccion("Juan")
		
		/* XPECT issues --- 
		   "Wrong number of arguments. Should be new Direccion(c, n)" at "new Direccion(1, 2, 3)"
		   "Unused variable" at "d3"
		   ---
		*/
		const d3 = new Direccion(1, 2, 3)	
		
		const p1 = new Point()
		p1.blah()

		const p2 = new Point(2,3)
		p2.blah()
		
		// XPECT errors --> "Wrong number of arguments. Should be new Point() or new Point(ax, ay)" at "new Point(1, 2, 3)"
		const p3 = new Point(1, 2, 3)
		p3.blah()
		
		// XPECT errors --> "Wrong number of arguments. Should be new Circle(ap, ar) or new Circle(x, y, ar)" at "new Circle()"
		const c1 = new Circle()
		c1.blah()
	}	
	
}

class A {
	var x
	// XPECT warnings --> "Variable x is never assigned in this constructor" at "{ }"
	constructor() { }
	constructor(_x) { x = _x }
	method x() = x
}

class B inherits A {
	constructor()
	method doWhatBDoesWell() {} 
}

class C inherits A {
	var y
	constructor(_x, _y) = super(_x) {
		y = _y
	}
	method doWhatCDoesWell() {} 
}

class D inherits A {
	
}

class E inherits D {
	var var1
	constructor(_var1) { var1 = _var1 }	
}

class F inherits E {
	var var2
	constructor(_var1, _var2) = super(_var1) {
		var2 = _var2
	}
}

class A_InicializandoX {
	var x = 1
	constructor() { }
	constructor(_x) { x = _x }
	method x() = x
}

class TestLastConstructorDefinition {
	method doSomething() {
		/* XPECT issues --- 
		   "Wrong number of arguments. Should be new B()" at "new B(2)"
		   "Unused variable" at "b"
		   ---
		*/
		const b = new B(2)
		const anotherB = new B()
		anotherB.doWhatBDoesWell()
		var c = new C(1, 5)
		// XPECT errors --> "Wrong number of arguments. Should be new C(_x, _y)" at "new C()"
		c = new C()
		// XPECT errors --> "Wrong number of arguments. Should be new C(_x, _y)" at "new C(1)"
		c = new C(1)
		c.doWhatCDoesWell()
		var d = new D()
		d = new D(4)
		var f = new F(1, 2)
		var e = new E(1)
		// XPECT errors --> "Wrong number of arguments. Should be new E(_var1)" at "new E()"
		e = new E()
		// XPECT errors --> "Wrong number of arguments. Should be new E(_var1)" at "new E(1, 2)"
		e = new E(1, 2)
		// XPECT errors --> "Wrong number of arguments. Should be new F(_var1, _var2)" at "new F()"
		e = new F()
		// XPECT errors --> "Wrong number of arguments. Should be new F(_var1, _var2)" at "new F(1)"
		f = new F(1)
		d.x()
	}
}
class Persona {
	var edad
	
	constructor(_value){
		edad = _value
	}
	method cumplirAnios() {
		edad += 1
	}
}

class Hijo inherits Persona {
	
}
// XPECT errors --> "Object must explicitly call a superclass constructor: (_value)" at "Persona"
object pepe inherits Persona {
	
}
class TestPersonas {
	method testear() {
		assert.notEquals(new Hijo(2), new Persona(2))
	}	
}

class Ave {
	var energia
	var edad = 10
	method cumplirAnios() {
		edad++
	}
	method volar() { energia -= 10 }
}
class Golondrina inherits Ave {
	// XPECT warnings --> "Variable is never assigned" at "peso"
	var peso
	method estaGorda() = peso > 100
}
class Torcaza inherits Ave {
	var color
	constructor(_color) {
		color = _color
		energia = 10
		edad = 1
	}
}
class Entrenador {
	var pepita = null
	var otraPepita = null
	var torcaza = null
	method crearUnAve() {
		// XPECT errors --> "You must provide initial value to the following references: energia" at "new Ave(edad = 2)"
		pepita = new Ave(edad = 2)
		// XPECT errors --> "Reference inexistente not found in class Ave" at "inexistente = true"
		pepita = new Ave(energia = 12, inexistente = true)
		pepita = new Ave(edad = 2, energia = 50)
		pepita = new Ave(energia = 50)
	}
	method crearOtraAve() {
		// XPECT errors --> "You must provide initial value to the following references: peso, energia" at "new Golondrina(edad = 2)"
		otraPepita = new Golondrina(edad = 2)
		// XPECT errors --> "You must provide initial value to the following references: energia" at "new Golondrina(edad = 10, peso = 5)"
		otraPepita = new Golondrina(edad = 10, peso = 5)
		otraPepita = new Golondrina(edad = 10, peso = 5, energia = 56)
	}
	method crearTorcaza() {
		torcaza = new Torcaza("azul")
		torcaza = new Torcaza(color = "rojo", energia = 25, edad = 3)
		// XPECT errors --> "You must provide initial value to the following references: energia" at "new Torcaza(color = "rojo")"
		torcaza = new Torcaza(color = "rojo")
		// XPECT errors --> "You must provide initial value to the following references: color, energia" at "new Torcaza(edad = 5)"
		torcaza = new Torcaza(edad = 5)
		// XPECT errors --> "Wrong number of arguments. Should be new Torcaza(_color)" at "new Torcaza()"
		torcaza = new Torcaza()
	}
}