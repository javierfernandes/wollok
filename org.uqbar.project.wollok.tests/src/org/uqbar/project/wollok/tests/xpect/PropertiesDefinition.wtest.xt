/* XPECT_SETUP org.uqbar.project.wollok.tests.xpect.WollokXPectTest END_SETUP */

class Arma {
   method artefacto()
}

class EspadaConcreta inherits Arma {
   const property artefacto = new Object()
}

class EspadaAbstracta inherits Arma {}

class A {
	method m1(x)
}

class B inherits A {
	var property m1
}

class C inherits A {
	const property m1
}


describe "group of tests" {
	
	const valor = 4
	
	// XPECT errors --> "Property are only allowed in objects, classes and mixins" at "property"
	var property valor2 = 0
	
	const cuatro = 4
	
	// XPECT errors --> "Property are only allowed in objects, classes and mixins" at "property"
	const property cuatro2 = 4
	
	test "cuatro es 4" {
		assert.equals(valor, cuatro)
	}
	
	test "cuatro no es 3" {
		// XPECT errors --> "Property are only allowed in objects, classes and mixins" at "property"
		var property localVariable = 0
		assert.notEquals(3, cuatro)
	}
	
	test "no se puede instanciar una clase a la que le falta implementar métodos abstractos" {
		// XPECT errors --> "Class EspadaAbstracta cannot be instantiated because it has abstract methods: artefacto() (required by Arma)" at "EspadaAbstracta"
		assert.notEquals(null, new EspadaAbstracta())
		
		// XPECT errors --> "Class C cannot be instantiated because it has abstract methods: m1(x) (required by A)" at "C"
		assert.notEquals(null, new C(m1 = 2))
	}
	
	test "se puede instanciar una clase que define una const property como implementación de un método abstracto" {
		assert.notEquals(null, new EspadaConcreta().artefacto())
	}

	test "se puede instanciar una clase que define una var property como implementación de un método abstracto" {
		const b = new B(m1 = 2)
		b.m1(5)
		assert.notEquals(5, b.m1())
	}	
}
