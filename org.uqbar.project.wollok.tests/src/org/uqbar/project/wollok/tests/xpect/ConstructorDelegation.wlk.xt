/* XPECT_SETUP org.uqbar.project.wollok.tests.xpect.WollokXPectTest END_SETUP */

class A {
	var x
	var y
	// XPECT errors --> "Invalid constructor call. It does not exist in superclass. Valid constructors are: self()" at "self(22)"
	constructor() = self(22) {
		x = 2
		y = 2
	}
	
	method getX() { return x }
	method getY() { return y }
}

class B {
	var x
	constructor(_x) { x = _x }
}

class EmptyB {

}
class E inherits EmptyB {
	// XPECT errors --> "Invalid super constructor call. Superclass has no explicit constructors." at "super(3)"
	constructor() = super(3) {}
}

class C inherits B {
	// XPECT errors --> "Invalid super constructor call. It does not exist in superclass. Valid constructors are: super(_x)" at "super()"
	constructor() = super() {}
}

class D inherits B {
	// XPECT warnings --> "Must call a super class constructor explicitly" at "constructor() { 		 	}"
	constructor() {
		
	}
	
	// XPECT errors --> "Invalid super constructor call. It does not exist in superclass. Valid constructors are: super(_x)" at "super(1, a)"
	constructor(a) = super(1, a) {}
}


class SuperClass {
	var superX
	
	method getSuperX() { return superX }
	method setSuperX(value) { superX = value }
}
class SubClass inherits SuperClass { 
	var anotherVariable
	// XPECT errors --> "Invalid super constructor call. Superclass has no explicit constructors." at "super()"
	constructor(n) = super() {
		anotherVariable = n
	}
	method getAnotherVariable() = anotherVariable
}


// 
//  REQUIRED CONSTRUCTOR CALLS 
//

class X {
	var a
	constructor(_a) {
		a = _a
	}
	method getA() { return a }
}


class Y inherits X {
}

class Z inherits X {
	constructor() = super("something") {}
}

class Superclase {
	var a
	
	// XPECT warnings --> "Variable a is never assigned in this constructor" at "{}"
	constructor() {}
	constructor(_a) {
		a = _a
	}
	method getA() { return a }
}

class InvalidInstanceAccessOnConstructorDelegation inherits Superclase {
	var x = 1
	
	// XPECT warnings --> "Accessing instance methods within constructor delegation is dangerous because object might not be completely initialized." at "self"
	constructor() = super(self.getX()) 
	
	method getX() { return x }	
}

class InvalidInstanceAccessOnConstructorDelegation2 inherits Superclase {
	// XPECT warnings --> "Accessing instance methods within constructor delegation is dangerous because object might not be completely initialized." at "self"
	constructor() = super(self)
}

class InvalidInstanceAccessOnConstructorDelegation3 inherits Superclase {
	var x = 2

	// XPECT errors --> "Accessing instance variables within constructor delegation is dangerous because object might not be completely initialized." at "x"
	constructor() = super(x)
	
	method x() = x
}
	
class InvalidInstanceAccessOnConstructorDelegation4 inherits Superclase {	
	// XPECT errors --> "Accessing super methods within constructor delegation is dangerous because object might not be completely initialized." at "super(\"blah\")"
	constructor() = super(super("blah"))
}

class Cyclic {
	// XPECT errors --> "Constructor has an infinit loop delegation to self. You must change this definition." at "self(_param)"
	constructor(_param) = self(_param)
}

class Cyclic2 {
	// XPECT errors --> "Invalid super constructor call. Superclass has no explicit constructors." at "super(_param)"
	constructor(_param) = super(_param)
}