/* XPECT_SETUP org.uqbar.project.wollok.tests.typesystem.xpect.TypeSystemXpectTestCase END_SETUP */

class Ave {
	var energia = 100
	
	// XPECT methodType at comer --> (Number) => Void	
	method comer(gramos) {
		energia = energia + gramos 
	}
	
	// XPECT methodType at energia --> () => Number
	method energia() = energia
}

class Golondrina inherits Ave {
	// XPECT methodType at vola --> () => Void
	method vola() {
		energia = energia - 10 
	}
	
	// XPECT methodType at comer --> (Number) => Void
	override method comer(gramos) {
		super(gramos + 10) 
	}
}

class GolondrinaMentirosa inherits Golondrina {
	// XPECT methodType at energia --> () => Number
	override method energia() = super() + 10
}



class EntrenadorChanta inherits EntrenadorDeGolondrinas {
	// XPECT methodType at alimentar --> (Ave) => Void
	override method alimentar(ave) { 
		super(new GolondrinaMentirosa())
	}
	
	// XPECT methodType at hacerQueVuele --> (Golondrina) => Void
	override method hacerQueVuele(golondrina) {
//		golondrina.comer(1) TODO: Fix it! This can't be an Ave
		super(golondrina)
	}
	
	// XPECT methodType at pajaro --> () => GolondrinaMentirosa
	override method pajaro() {
		// XPECT type at p --> Golondrina
		const p = super()
		return new GolondrinaMentirosa()
	} 
}

class EntrenadorDeGolondrinas inherits EntrenadorDeAves {
	// XPECT methodType at alimentar --> (Ave) => Void
	override method alimentar(ave) { 
		super(new Golondrina())
	}
	
	// XPECT methodType at hacerQueVuele --> (Golondrina) => Void	
	method hacerQueVuele(golondrina) {
		golondrina.vola()
	} 
	
	// XPECT methodType at pajaro --> () => Golondrina
	override method pajaro() {
		// XPECT type at a --> Ave
		const a = super()
		return new Golondrina()
	}
	
	method haverVolarGolondrina() { self.hacerQueVuele(new Golondrina()) }
}

class EntrenadorDeAves {
	// XPECT methodType at alimentar --> (Ave) => Void
	method alimentar(ave) { ave.comer(10) }
	
	// XPECT methodType at pajaro --> () => Ave
	method pajaro() = new Ave()
	
	method alimentarAve() { self.alimentar(new Ave()) }
}

